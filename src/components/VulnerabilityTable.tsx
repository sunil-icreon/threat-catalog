import { EPSSData, formatRelativeTime } from "@/utilities/util";
import { Badge, Table } from "react-bootstrap";

import { IVulnerabilityType } from "@/types/vulnerability";
import { AdvisoryDetailLink } from "./shared/AdvisoryDetailLink";
import { PackageDetailLink } from "./shared/PackageDetailLink";
import { RenderEPSS } from "./shared/UtilityComponents";

interface VulnerabilityTableProps {
  vulnerabilities: IVulnerabilityType[];
}

const severityVariants = {
  CRITICAL: "danger",
  HIGH: "warning",
  MEDIUM: "info",
  LOW: "success"
} as const;

const statusVariants = {
  ACTIVE: "danger",
  RESOLVED: "success",
  MITIGATED: "primary"
} as const;

export default function VulnerabilityTable({
  vulnerabilities
}: VulnerabilityTableProps) {
  return (
    <div className='table-responsive border rounded'>
      <Table striped hover className='mb-0 table-hover'>
        <thead className='table-dark'>
          <tr>
            <th>Title</th>
            <th style={{ width: "300px" }}>Affected Package</th>
            <th style={{ width: "80px" }}>Severity</th>
            <th style={{ width: "100px" }}>EPSS</th>
            <th style={{ width: "120px" }}>Published</th>
          </tr>
        </thead>
        <tbody>
          {vulnerabilities.map((vulnerability) => (
            <tr key={vulnerability.id}>
              <td>
                <div className='fw-semibold text-dark mb-1'>
                  <div className='small'>
                    <AdvisoryDetailLink
                      id={vulnerability.id}
                      label={vulnerability.summary}
                      source={vulnerability.source ?? "GHSA"}
                    />
                  </div>
                </div>
                {vulnerability.cveId && (
                  <div className='mt-1'>
                    <code className='bg-light px-2 py-1 rounded small'>
                      {vulnerability.cveId}
                    </code>
                  </div>
                )}

                <div className='flex flex-justify-start severity-badge'>
                  {/* <Badge
                    bg={statusVariants[vulnerability.status ?? "ACTIVE"]}
                    className='text-capitalize me-2'
                  >
                    {vulnerability.status}
                  </Badge> */}

                  <Badge
                    bg='outline'
                    className={`ecosystem-${vulnerability.ecosystem} text-capitalize`}
                  >
                    {vulnerability.ecosystem}
                  </Badge>
                </div>
              </td>
              <td>
                <div className='package-name-cell-content'>
                  {/* <code className='bg-light px-2 py-1 rounded d-block'> */}
                  <PackageDetailLink
                    ecoSystem={vulnerability.ecosystem}
                    packageName={vulnerability.packageName}
                  />

                  {vulnerability.affectedVersions &&
                    vulnerability.affectedVersions.length > 0 && (
                      <div className='mt-1'>
                        <div className='d-flex flex-wrap gap-1 small'>
                          {vulnerability.affectedVersions
                            .slice(0, 3)
                            .map((version, index) => (
                              <code
                                className='bg-light px-2 py-1 rounded break-all small'
                                key={version}
                              >
                                {version}
                              </code>
                            ))}

                          {vulnerability.affectedVersions.length > 3 && (
                            <>+{vulnerability.affectedVersions.length - 3}</>
                          )}
                        </div>
                      </div>
                    )}

                  {/* </code> */}
                  {/* <div className="text-muted mt-1">
                    v{vulnerability.packageVersion}
                  </div> */}
                </div>
              </td>

              <td>
                <Badge
                  bg={severityVariants[vulnerability.severity]}
                  className='text-capitalize me-2 w-70-px severity-badge'
                >
                  {vulnerability.severity}
                </Badge>
              </td>
              <td>
                {vulnerability?.epss?.percentage ? (
                  <RenderEPSS
                    epss={vulnerability?.epss as EPSSData}
                    displayType='table'
                  />
                ) : (
                  <></>
                )}

                <div className='flex flex-justify-start mt-1'>
                  {vulnerability.cvssScore ? (
                    <code className='bg-light px-2 py-1 rounded break-all small'>
                      <strong>Score:{vulnerability.cvssScore}</strong>
                    </code>
                  ) : (
                    <></>
                  )}
                </div>
              </td>
              <td>
                <div className='small text-muted'>
                  {formatRelativeTime(vulnerability.publishedDate)}
                </div>
              </td>
            </tr>
          ))}
        </tbody>
      </Table>
    </div>
  );
}
