import { useAppStore } from "@/lib/store";
import { useRouter } from "next/navigation";
import { useEffect, useState } from "react";
import { Button, Card, Col, Form, InputGroup, Row } from "react-bootstrap";
import { VulnerabilityFilters as FilterType } from "../types/vulnerability";
import { GetEcosystemOptions } from "./shared/UtilityComponents";

interface VulnerabilityFiltersProps {
  onFiltersChange: (filters: FilterType) => void;
}

export default function VulnerabilityFiltersComponent({
  onFiltersChange
}: VulnerabilityFiltersProps) {
  const [filterOpen, setFilterOpen] = useState(true);
  const [filters, setFilters] = useState<FilterType>({
    search: "",
    ecosystem: "",
    severity: "",
    status: ""
  });

  const { threatFilter } = useAppStore();
  const router = useRouter();

  const handleFilterChange = (key: keyof FilterType, value: string) => {
    const newFilters = { ...filters, [key]: value };
    setFilters(newFilters);
    onFiltersChange(newFilters);
  };

  const toggleFilterOpen = () => {
    setFilterOpen((prev: boolean) => !prev);
  };

  const clearFilters = () => {
    // router.push("/", { scroll: false });

    const clearedFilters = {
      search: "",
      ecosystem: "",
      severity: "",
      status: ""
    };
    setFilters(clearedFilters);
    onFiltersChange(clearedFilters);
  };

  useEffect(() => {
    setFilters(threatFilter);
    onFiltersChange(threatFilter);
    // eslint-disable-next-line react-hooks/exhaustive-deps
  }, [threatFilter]);

  return (
    <Card className='mb-4'>
      <Card.Header
        className='d-flex justify-content-between align-items-center'
        onClick={toggleFilterOpen}
      >
        <h5 className='mb-0 d-flex align-items-center'>
          <i className='bi bi-funnel me-2'></i>
          Filters
        </h5>
        <Button
          size='sm'
          variant='outline-secondary'
          className='d-flex align-items-center'
        >
          <i
            className={`bi ${
              filterOpen ? "bi-arrows-collapse" : "bi-arrows-expand"
            } `}
          ></i>
        </Button>
      </Card.Header>
      {filterOpen && (
        <Card.Body>
          <Row className='g-3'>
            {/* Search */}
            <Col md={6} lg={3}>
              <Form.Label>Search</Form.Label>
              <InputGroup>
                <InputGroup.Text>
                  <i className='bi bi-search'></i>
                </InputGroup.Text>
                <Form.Control
                  type='text'
                  // value={filters.search}
                  placeholder='Search vulnerabilities...'
                  onChange={(e) => handleFilterChange("search", e.target.value)}
                />
              </InputGroup>
            </Col>

            {/* Ecosystem */}
            <Col md={6} lg={3}>
              <Form.Label>Ecosystem</Form.Label>
              <Form.Select
                value={filters.ecosystem}
                onChange={(e) =>
                  handleFilterChange("ecosystem", e.target.value)
                }
              >
                <GetEcosystemOptions />
              </Form.Select>
            </Col>

            {/* Severity */}
            <Col md={6} lg={3}>
              <Form.Label>Severity</Form.Label>
              <Form.Select
                value={filters.severity}
                onChange={(e) => handleFilterChange("severity", e.target.value)}
              >
                <option value=''>All Severities</option>
                <option value='CRITICAL'>Critical</option>
                <option value='HIGH'>High</option>
                <option value='MEDIUM'>Medium</option>
                <option value='LOW'>Low</option>
              </Form.Select>
            </Col>

            {/* Status */}
            <Col md={6} lg={3}>
              <Form.Label className='d-none d-sm-block'>&nbsp;</Form.Label>
              <Form.Control
                as='button'
                onClick={clearFilters}
                size={"md" as "sm"}
              >
                Clear all filters
              </Form.Control>
            </Col>
          </Row>
        </Card.Body>
      )}
    </Card>
  );
}
